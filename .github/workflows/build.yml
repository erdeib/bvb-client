name: "build"

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.env.example'
      - '.gitattributes'
      - 'infection.json'
      - 'psalm.xml'

  schedule:
    - cron: '0 0 1 * *'
    
# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  COMPOSER_ROOT_VERSION: "2.2.3"

jobs:
  coding-standards:
    name: "Coding standards"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1.1"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"

      - name: "Check coding standards (PHP_CodeSniffer)"
        shell: "bash"
        run: "./vendor/bin/phpcs ./src/ --standard=PSR12"

  static-analysis:
    name: "Static analysis"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1.1"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"

      - name: "Statically analyze code (PHPStan)"
        shell: "bash"
        run: "./vendor/bin/phpstan analyze ./src/"

      - name: "Statically analyze code (Psalm)"
        shell: "bash"
        run: "./vendor/bin/psalm"

  
  unit-tests:
    name: "Unit tests"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1.1"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ matrix.composer-options }}"

      - name: "Run unit tests"
        shell: "bash"
        run: "./vendor/bin/pest --testsuite=Unit"

      - name: "Run features tests"
        shell: "bash"
        run: "./vendor/bin/pest --testsuite=Feature"

  mutation-tests:
    name: "Mutation tests"
    needs: ["unit-tests"]
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1.1"
          coverage: "xdebug"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ matrix.composer-options }}"

      - name: "Run mutation tests (Infection)"
        shell: "bash"
        run: "XDEBUG_MODE=coverage ./vendor/bin/infection --test-framework=pest --show-mutations"
